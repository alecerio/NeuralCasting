#ifndef __NCAST_TANH__
#define __NCAST_TANH__

#include <stdint.h>
#include "quant.h"
#include "utils.h"

#define NCAST_TANH_LUT_SIZE (256)

static float32_t NCAST_TANH_LUT[NCAST_TANH_LUT_SIZE] = {
    -0.9993293 , -0.99928606, -0.99924003, -0.99919104, -0.99913889, -0.99908337,
    -0.99902429, -0.99896139, -0.99889444, -0.99882318, -0.99874733, -0.9986666,
    -0.99858066, -0.99848919, -0.99839183, -0.9982882 , -0.9981779 , -0.9980605,
    -0.99793554, -0.99780254, -0.99766098, -0.99751031, -0.99734996, -0.99717928,
    -0.99699764, -0.99680431, -0.99659856, -0.99637958, -0.99614653, -0.99589851,
    -0.99563457, -0.99535367, -0.99505475, -0.99473665, -0.99439815, -0.99403793,
    -0.99365463, -0.99324678, -0.99281279, -0.99235103, -0.99185972, -0.991337,
    -0.99078086, -0.99018919, -0.98955975, -0.98889015, -0.98817786, -0.9874202,
    -0.9866143 , -0.98575714, -0.98484552, -0.98387602, -0.98284503, -0.98174873,
    -0.98058305, -0.97934369, -0.97802611, -0.97662548, -0.9751367 , -0.97355436,
    -0.97187275, -0.97008583, -0.96818722, -0.96617017, -0.96402758, -0.96175193,
    -0.95933529, -0.95676933, -0.95404526, -0.95115382, -0.94808529, -0.94482944,
    -0.94137554, -0.93771234, -0.93382804, -0.92971031, -0.92534623, -0.92072232,
    -0.91582454, -0.91063826, -0.90514825, -0.89933873, -0.89319334, -0.88669515,
    -0.8798267 , -0.87257001, -0.86490662, -0.8568176 , -0.84828364, -0.83928506,
    -0.82980191, -0.81981401, -0.80930107, -0.79824275, -0.78661881, -0.77440919,
    -0.76159416, -0.74815447, -0.73407152, -0.7193275 , -0.7039056 , -0.68779021,
    -0.67096707, -0.65342359, -0.63514895, -0.61613443, -0.59637356, -0.57586239,
    -0.55459972, -0.53258729, -0.50982997, -0.48633602, -0.46211716, -0.43718879,
    -0.41157006, -0.38528397, -0.3583574 , -0.33082112, -0.30270973, -0.27406159,
    -0.24491866, -0.21532634, -0.1853332 , -0.15499073, -0.124353  , -0.0934763,
    -0.06241875, -0.03123983,  0.        ,  0.03123983,  0.06241875,  0.0934763,
     0.124353  ,  0.15499073,  0.1853332 ,  0.21532634,  0.24491866,  0.27406159,
     0.30270973,  0.33082112,  0.3583574 ,  0.38528397,  0.41157006,  0.43718879,
     0.46211716,  0.48633602,  0.50982997,  0.53258729,  0.55459972,  0.57586239,
     0.59637356,  0.61613443,  0.63514895,  0.65342359,  0.67096707,  0.68779021,
     0.7039056 ,  0.7193275 ,  0.73407152,  0.74815447,  0.76159416,  0.77440919,
     0.78661881,  0.79824275,  0.80930107,  0.81981401,  0.82980191,  0.83928506,
     0.84828364,  0.8568176 ,  0.86490662,  0.87257001,  0.8798267 ,  0.88669515,
     0.89319334,  0.89933873,  0.90514825,  0.91063826,  0.91582454,  0.92072232,
     0.92534623,  0.92971031,  0.93382804,  0.93771234,  0.94137554,  0.94482944,
     0.94808529,  0.95115382,  0.95404526,  0.95676933,  0.95933529,  0.96175193,
     0.96402758,  0.96617017,  0.96818722,  0.97008583,  0.97187275,  0.97355436,
     0.9751367 ,  0.97662548,  0.97802611,  0.97934369,  0.98058305,  0.98174873,
     0.98284503,  0.98387602,  0.98484552,  0.98575714,  0.9866143 ,  0.9874202,
     0.98817786,  0.98889015,  0.98955975,  0.99018919,  0.99078086,  0.991337,
     0.99185972,  0.99235103,  0.99281279,  0.99324678,  0.99365463,  0.99403793,
     0.99439815,  0.99473665,  0.99505475,  0.99535367,  0.99563457,  0.99589851,
     0.99614653,  0.99637958,  0.99659856,  0.99680431,  0.99699764,  0.99717928,
     0.99734996,  0.99751031,  0.99766098,  0.99780254,  0.99793554,  0.9980605,
     0.9981779 ,  0.9982882 ,  0.99839183,  0.99848919,  0.99858066,  0.9986666,
     0.99874733,  0.99882318,  0.99889444,  0.99896139,  0.99902429,  0.99908337,
     0.99913889,  0.99919104,  0.99924003,  0.99928606,
};

#define NCAST_TANH_MIN_X (-4.0f)
#define NCAST_TANH_MAX_X (4.0f)

#define NCAST_ACCESS_TANH_LUT(X, Y) \
if(X < NCAST_TANH_MIN_X) \
    Y = NCAST_TANH_LUT[0]; \
else if(X > NCAST_TANH_MAX_X) \
    Y = NCAST_TANH_LUT[NCAST_TANH_LUT_SIZE-1]; \
else { \
    float32_t x_normalized = (X - NCAST_TANH_MIN_X) / (NCAST_TANH_MAX_X - NCAST_TANH_MIN_X); \
    int32_t ix = (int32_t)(x_normalized * NCAST_TANH_LUT_SIZE); \
    float32_t dx = X - (int32_t) X; \
    float32_t y0 = NCAST_TANH_LUT[ix]; \
    float32_t y1 = NCAST_TANH_LUT[ix+1]; \
    Y = y0 + (y1 - y0) * dx; \
}

#define NCAST_TANH(X, Y, SIZE) \
for(int i=0; i<SIZE; i++) { \
    NCAST_ACCESS_TANH_LUT(X[i], Y[i]); \
}


#endif // __NCAST_TANH__
